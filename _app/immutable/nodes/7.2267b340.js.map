{"version":3,"file":"7.2267b340.js","sources":["../../../../../../src/lib/setting.ts","../../../../../../src/routes/config/settings/ConfirmChallenge.svelte","../../../../../../src/routes/config/settings/confirm-challenge.ts","../../../../../../src/routes/config/settings/ResetPopup.svelte","../../../../../../src/routes/config/settings/+page.svelte"],"sourcesContent":["import type {Action} from \"svelte/action\"\nimport {changes, ChangeType, settings} from \"$lib/undo-redo\"\n\nexport const setting: Action<HTMLInputElement, {id: number; inverse?: number; scale?: number}> = function (\n  node: HTMLInputElement,\n  {id, inverse, scale},\n) {\n  node.setAttribute(\"disabled\", \"\")\n  const type = node.getAttribute(\"type\") as \"number\" | \"checkbox\"\n  const min = node.hasAttribute(\"min\") ? Number(node.getAttribute(\"min\")) : undefined\n  const max = node.hasAttribute(\"max\") ? Number(node.getAttribute(\"max\")) : undefined\n  console.log(min, max, \"|\", id, \"|\", node.getAttribute(\"min\"), node.getAttribute(\"max\"))\n\n  const unsubscribe = settings.subscribe(async settings => {\n    if (id in settings) {\n      const {value, isApplied} = settings[id]\n      if (type === \"number\") {\n        node.value = (\n          inverse !== undefined ? inverse / value : scale !== undefined ? scale * value : value\n        ).toString()\n      } else {\n        node.checked = value !== 0\n      }\n      if (isApplied) {\n        node.classList.remove(\"pending-changes\")\n      } else {\n        node.classList.add(\"pending-changes\")\n      }\n      node.removeAttribute(\"disabled\")\n    } else {\n      node.setAttribute(\"disabled\", \"\")\n    }\n  })\n\n  async function listener() {\n    let value: number\n    if (type === \"number\") {\n      value = Number(node.value)\n      if (Number.isNaN(value)) return\n      value = Math.floor(\n        inverse !== undefined ? inverse / value : scale !== undefined ? value / scale : value,\n      )\n      if (min !== undefined) value = Math.max(min, value)\n      if (max !== undefined) value = Math.min(max, value)\n    } else {\n      value = node.checked ? 1 : 0\n    }\n\n    changes.update(changes => {\n      changes.push({\n        type: ChangeType.Setting,\n        id: id,\n        setting: value,\n      })\n      return changes\n    })\n  }\n\n  node.addEventListener(\"change\", listener)\n\n  return {\n    destroy() {\n      node.removeEventListener(\"change\", listener)\n      unsubscribe()\n    },\n  }\n}\n","<script lang=\"ts\">\n  import {serialPort} from \"$lib/serial/connection\"\n  import {createEventDispatcher} from \"svelte\"\n\n  export let challenge: string\n\n  let challengeInput = \"\"\n  $: challengeString = `${challenge} ${$serialPort!.device}`\n  $: isValid = challengeInput === challengeString\n\n  const dispatch = createEventDispatcher()\n</script>\n\n<h3>Type the following to confim the action</h3>\n\n<p>{challengeString}</p>\n<input type=\"text\" bind:value={challengeInput} placeholder={challengeString} />\n\n<button disabled={!isValid} on:click={() => dispatch(\"confirm\")}>Confirm {challenge}</button>\n\n<style lang=\"scss\">\n  input[type=\"text\"] {\n    color: inherit;\n    font-family: inherit;\n    background: none;\n    border: none;\n    border-bottom: 1px solid currentcolor;\n\n    &:focus {\n      outline: none;\n      border-color: var(--md-sys-color-secondary);\n    }\n  }\n\n  button {\n    color: var(--md-sys-color-error);\n  }\n</style>\n","import type {Action} from \"svelte/action\"\nimport ConfirmChallenge from \"./ConfirmChallenge.svelte\"\nimport tippy from \"tippy.js\"\n\nexport const confirmChallenge: Action<HTMLElement, {onConfirm: () => void; challenge: string}> = (\n  node,\n  {onConfirm, challenge},\n) => {\n  let component: ConfirmChallenge | undefined\n  let target: HTMLElement | undefined\n  const edit = tippy(node, {\n    interactive: true,\n    trigger: \"click\",\n    onShow(instance) {\n      target = instance.popper.querySelector(\".tippy-content\") as HTMLElement\n      target.classList.add(\"active\")\n      if (component === undefined) {\n        component = new ConfirmChallenge({target, props: {challenge}})\n        component.$on(\"confirm\", () => {\n          edit.hide()\n          onConfirm()\n        })\n      }\n    },\n    onHidden() {\n      component?.$destroy()\n      target?.classList.remove(\"active\")\n      component = undefined\n    },\n  })\n\n  return {\n    destroy() {\n      edit.destroy()\n    },\n  }\n}\n","<script lang=\"ts\">\n  import {confirmChallenge} from \"./confirm-challenge\"\n  import {serialPort} from \"$lib/serial/connection\"\n\n  const options = [\n    [[\"FACTORY\", \"Factory Reset\"]],\n    [\n      [\"PARAMS\", \"Reset Settings\"],\n      [\"KEYMAPS\", \"Reset Layout\"],\n      [\"CLEARCML\", \"Clear Chords\"],\n    ],\n    [\n      [\"STARTER\", \"Add starter chords\"],\n      [\"FUNC\", \"Add functional chords\"],\n    ],\n  ] as const\n</script>\n\n<h3>Reset Device</h3>\n{#each options as category, i}\n  {#if i > 0}\n    <hr />\n  {/if}\n  {#each category as [command, description]}\n    <button\n      class=\"error\"\n      use:confirmChallenge={{\n        onConfirm() {\n          $serialPort?.reset(command)\n          $serialPort = undefined\n        },\n        challenge: description,\n      }}>{description}...</button\n    >\n  {/each}\n{/each}\n\n<style lang=\"scss\">\n  hr {\n    opacity: 0.25;\n  }\n</style>\n","<script>\n  import Action from \"$lib/components/Action.svelte\"\n  import {popup} from \"$lib/popup\"\n  import {serialPort} from \"$lib/serial/connection\"\n  import {setting} from \"$lib/setting\"\n  import ResetPopup from \"./ResetPopup.svelte\"\n</script>\n\n<svelte:head>\n  <title>Device Settings - CharaChorder Device Manager</title>\n  <meta name=\"description\" content=\"Change your device's settings\" />\n</svelte:head>\n\n{#if $serialPort}\n  <form>\n    <fieldset>\n      <legend><label><input type=\"checkbox\" use:setting={{id: 0x41}} />Spurring</label></legend>\n      <p>\n        \"Chording only\" mode which tells your device to output chords on a press rather than a press &\n        release. It also enables you to jump from one chord to another without releasing everything and can be\n        activated in GTM or by chording both mirror keys. It can provide significant speed gains with\n        chording, but also takes away the flexibility of character entry.\n      </p>\n      <p>Spurring also helps new users learn how to chord by eliminating the need to focus on timing.</p>\n      <p>\n        Spurring is toggled by chording <Action display=\"keys\" action={540} /> and <Action\n          display=\"keys\"\n          action={542}\n        /> together.\n      </p>\n      <label\n        >Character Counter Timeout<span class=\"unit\"\n          ><input\n            type=\"number\"\n            step=\"0.001\"\n            min=\"0\"\n            max=\"240\"\n            use:setting={{id: 0x43, scale: 0.001}}\n          />s</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend><label><input type=\"checkbox\" use:setting={{id: 0x51}} />Arpeggiates</label></legend>\n      <p>\n        A quick, single key press and release used to indicate a suffix, prefix, or modifier to be associated\n        with a chord.\n      </p>\n      <p>The following keys have special behavior when arpeggiates are enabled:</p>\n      <ul>\n        <li>\n          <Action display=\"keys\" action={44} />, <Action display=\"keys\" action={59} /> and <Action\n            display=\"keys\"\n            action={58}\n          /> will be placed before the auto-inserted space\n        </li>\n        <li>\n          <Action display=\"keys\" action={46} />, <Action display=\"keys\" action={63} /> and <Action\n            display=\"keys\"\n            action={33}\n          /> will be placed before the auto-inserted space and capitalize the next word\n        </li>\n        <li>\n          <Action display=\"keys\" action={45} /> and <Action display=\"keys\" action={47} /> will replace the auto-inserted\n          space\n        </li>\n      </ul>\n      <label\n        >Timeout After Chord<span class=\"unit\"\n          ><input type=\"number\" step=\"1\" use:setting={{id: 0x54}} />ms</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend>Chord Modifiers</legend>\n      <p>\n        Chord modifiers change a chord when held with the chord or when pressed after (arpeggiated), <b\n          >provided that arpeggiates are enabled.</b\n        >\n      </p>\n      <ul>\n        <li><Action display=\"keys\" action={513} /> Capitalizes the first letter of a chord</li>\n        <li><Action display=\"keys\" action={540} /> Present Tense (supported words only)</li>\n        <li><Action display=\"keys\" action={542} /> Plural (supported words only)</li>\n        <li><Action display=\"keys\" action={550} /> Past Tense (supported words only)</li>\n        <li><Action display=\"keys\" action={551} /> Comparative (supported words only)</li>\n      </ul>\n    </fieldset>\n\n    <fieldset>\n      <legend>Character Entry</legend>\n      {#if $serialPort.device === \"LITE\"}\n        <label>Swap Keymap 0 and 1<input type=\"checkbox\" use:setting={{id: 0x13}} /></label>\n      {/if}\n      <label>\n        Character Entry (chentry)\n        <input type=\"checkbox\" use:setting={{id: 0x12}} />\n      </label>\n      <label>\n        Key Scan Rate\n        <span class=\"unit\"><input type=\"number\" use:setting={{id: 0x14, inverse: 1000}} />Hz</span></label\n      >\n      <label>\n        Key Debounce Press<span class=\"unit\"><input type=\"number\" use:setting={{id: 0x15}} />ms</span></label\n      >\n      <label\n        >Key Debounce Release<span class=\"unit\"><input type=\"number\" use:setting={{id: 0x16}} />ms</span\n        ></label\n      >\n      <label\n        >Output Character Delay<span class=\"unit\"><input type=\"number\" use:setting={{id: 0x17}} />µs</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend><label><input type=\"checkbox\" use:setting={{id: 0x21}} />Mouse</label></legend>\n      <label\n        >Mouse Speed<input type=\"number\" use:setting={{id: 0x22}} /><input\n          type=\"number\"\n          use:setting={{id: 0x23}}\n        /></label\n      >\n      <label>Scroll Speed<input type=\"number\" use:setting={{id: 0x25}} /></label>\n      <label>\n        <span>\n          Active Mouse\n          <p>Bounces mouse by 1px every 60s if enabled</p></span\n        >\n        <input type=\"checkbox\" use:setting={{id: 0x24}} /></label\n      >\n      <label\n        >Poll Rate<span class=\"unit\"><input type=\"number\" use:setting={{id: 0x26, inverse: 1000}} />Hz</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend><label><input type=\"checkbox\" use:setting={{id: 0x31}} />Chording</label></legend>\n      <label\n        >Auto-delete Timeout <span class=\"unit\"\n          ><input type=\"number\" min=\"0\" max=\"25500\" step=\"10\" use:setting={{id: 0x33}} />ms</span\n        ></label\n      >\n      <label\n        >Press Tolerance<span class=\"unit\"\n          ><input type=\"number\" min=\"1\" max=\"50\" step=\"1\" use:setting={{id: 0x34}} />ms</span\n        ></label\n      >\n      <label\n        >Release Tolerance<span class=\"unit\"\n          ><input type=\"number\" min=\"1\" max=\"50\" step=\"1\" use:setting={{id: 0x35}} />ms</span\n        ></label\n      >\n      <label>Compound Chording<input type=\"checkbox\" use:setting={{id: 0x61}} /></label>\n    </fieldset>\n\n    <fieldset>\n      <legend>Device</legend>\n      <label>Boot message<input type=\"checkbox\" use:setting={{id: 0x93}} /></label>\n      <label>GTM Realtime Feedback<input type=\"checkbox\" use:setting={{id: 0x92}} /></label>\n      <button class=\"outline\" use:popup={ResetPopup}>Reset...</button>\n    </fieldset>\n\n    {#if $serialPort.device === \"LITE\"}\n      <fieldset>\n        <legend><label><input type=\"checkbox\" />RGB</label></legend>\n        <label>Brightness<input type=\"range\" min=\"0\" max=\"50\" step=\"1\" /></label>\n        Color\n        <label>Reactive Keys<input type=\"checkbox\" /></label>\n      </fieldset>\n    {/if}\n  </form>\n{/if}\n\n<style lang=\"scss\">\n  form {\n    overflow-y: auto;\n    display: flex;\n    flex-flow: row wrap;\n    gap: 16px;\n    justify-content: center;\n\n    margin-block: auto;\n    padding-block-end: 48px;\n  }\n\n  button.outline {\n    border: 1px solid currentcolor;\n    border-radius: 8px;\n    height: 2em;\n    margin-block: 2em;\n    margin-inline: auto;\n  }\n\n  legend,\n  legend > label {\n    font-size: 24px;\n    font-weight: bold;\n  }\n\n  input[type=\"checkbox\"] {\n    font-size: 12px;\n  }\n\n  fieldset {\n    max-width: 400px;\n    border: 1px solid var(--md-sys-color-outline);\n    border-radius: 24px;\n\n    &:has(> legend input:not(:checked)) > :not(legend) {\n      pointer-events: none;\n      opacity: 0.7;\n    }\n\n    > label {\n      position: relative;\n      display: flex;\n      gap: 16px;\n      align-items: center;\n      justify-content: space-between;\n\n      margin-block: 4px;\n\n      font-size: 14px;\n\n      > input[type=\"number\"] {\n        border-radius: 16px 4px 4px 16px;\n        height: 24px;\n        text-align: center;\n\n        &:last-child:not(:only-child) {\n          border-radius: 4px 16px 16px 4px;\n        }\n\n        &:only-child {\n          border-radius: 16px;\n        }\n      }\n\n      &:has(input[type=\"number\"]) {\n        cursor: text;\n\n        &:hover {\n          filter: none;\n        }\n      }\n    }\n\n    .unit {\n      overflow: hidden;\n      display: flex;\n      gap: 4px;\n      align-items: center;\n      justify-content: flex-start;\n\n      width: 67px;\n      padding-inline-end: auto;\n\n      font-size: 12px;\n      font-weight: bold;\n\n      background: var(--md-sys-color-secondary-container);\n      border-radius: 16px;\n    }\n\n    input[type=\"number\"] {\n      display: flex;\n\n      width: 5ch;\n      height: 100%;\n      padding-block: 4px;\n\n      font-family: \"Noto Sans Mono\", monospace;\n      color: var(--md-sys-color-on-secondary);\n      text-align: end;\n\n      background: var(--md-sys-color-secondary);\n      border: none;\n\n      &::-webkit-inner-spin-button {\n        display: none;\n      }\n\n      &::after {\n        content: \"bleh\";\n      }\n\n      &:focus {\n        filter: brightness(120%);\n        outline: none;\n      }\n    }\n\n    ul,\n    p {\n      font-size: 10px;\n\n      :global(kbd) {\n        font-size: 12px;\n        height: 18px;\n      }\n    }\n  }\n\n  // stylelint-disable-next-line\n  label:global(:has(.pending-changes)) {\n    color: var(--md-sys-color-primary);\n\n    &::before {\n      position: absolute;\n      top: 0.5em;\n      right: 0.25em;\n      content: \"•\";\n    }\n  }\n</style>\n"],"names":["setting","node","id","inverse","scale","type","min","max","unsubscribe","settings","value","isApplied","listener","changes","ChangeType","ctx","insert_hydration","target","h3","anchor","p","input","button","challenge","$$props","challengeInput","dispatch","createEventDispatcher","click_handler","challengeString","$serialPort","$$invalidate","isValid","confirmChallenge","onConfirm","component","edit","tippy","instance","ConfirmChallenge","hr","confirmChallenge_function","if_block","create_if_block","i","command","set_store_value","serialPort","create_if_block_2","create_if_block_1","form","append_hydration","fieldset0","legend0","label0","input0","p0","p1","p2","label1","span0","input1","fieldset1","legend1","label2","input2","p3","p4","ul0","li0","li1","li2","label3","span1","input3","fieldset2","legend2","p5","ul1","li3","li4","li5","li6","li7","fieldset3","legend3","label4","input4","label5","span2","input5","label6","span3","input6","label7","span4","input7","label8","span5","input8","fieldset4","legend4","label9","input9","label10","input10","input11","label11","input12","label12","span6","input13","label13","span7","input14","fieldset5","legend5","label14","input15","label15","span8","input16","label16","span9","input17","label17","span10","input18","label18","input19","fieldset6","legend6","label19","input20","label20","input21","action_destroyer","ResetPopup","label","dispose","fieldset","meta"],"mappings":"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"}