import{w as c}from"./index.c4cb2da7.js";import{_ as v}from"./preload-helper.a4192956.js";import{r as p}from"./scheduler.780b4b73.js";function L(o){const e=new Uint8Array(o.length*2);let t=0;for(const s of o)s>255&&(e[t++]=s>>>8),e[t++]=s&255;return e.slice(0,t)}function R(o){const e=[];for(let t=0;t<o.length;t++){let s=o[t];s>0&&s<32&&(s=s<<8|o[++t]),e.push(s)}return e}class k{chunks="";transform(e,t){this.chunks+=e;const s=this.chunks.split(`\r
`);this.chunks=s.pop();for(const i of s)t.enqueue(i)}flush(e){e.enqueue(this.chunks)}}class ${major;minor;patch;preRelease;meta;constructor(e){const[,t,s,i,n,a]=/^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+([0-9A-Za-z-]+))?$/.exec(e);this.major=Number.parseInt(t),this.minor=Number.parseInt(s),this.patch=Number.parseInt(i),n&&(this.preRelease=n),a&&(this.meta=a)}toString(){return`${this.major}.${this.minor}.${this.patch}`+(this.preRelease?`-${this.preRelease}`:"")+(this.meta?`+${this.meta}`:"")}}function C(o){return R(Uint8Array.from({length:o.length/2}).map((e,t)=>Number.parseInt(o.slice(t*2,t*2+2),16)))}function T(o){return[...L(o)].map(e=>e.toString(16).padStart(2,"0")).join("").toUpperCase()}function A(o){return P(BigInt(`0x${o}`))}function b(o){return D(o).toString(16).padStart(32,"0").toUpperCase()}function D(o){let e=0n;for(let t=1;t<=o.length;t++)e|=BigInt(o[o.length-t]&1023)<<BigInt((12-t)*10);return e}function P(o){const e=[];for(let t=0;t<12;t++){const s=Number(o&0x3ffn);s!==0&&e.push(s),o>>=10n}return e}const I=new Map([["ONE M0",{usbProductId:32783,usbVendorId:9114}],["LITE S2",{usbProductId:33070,usbVendorId:12346}],["LITE M0",{usbProductId:32796,usbVendorId:9114}],["X",{usbProductId:33163,usbVendorId:12346}]]),M={ONE:90,LITE:67,X:256};navigator.serial===void 0&&{}.TAURI_FAMILY!==void 0&&await v(()=>import("./tauri-serial.8ac23e13.js"),["./tauri-serial.8ac23e13.js","./scheduler.780b4b73.js","./each.75920ee7.js","./index.2808127b.js"],import.meta.url);async function E(){return navigator.serial.getPorts().then(o=>o.filter(e=>{const{usbProductId:t,usbVendorId:s}=e.getInfo();for(const i of I.values())if(i.usbProductId===t&&i.usbVendorId===s)return!0;return!1}))}async function U(){return E().then(o=>o.length===1)}class x{constructor(e=115200){this.baudRate=e}port;reader;abortController1=new AbortController;abortController2=new AbortController;streamClosed;lock;suspendDebounce=100;suspendDebounceId;version;company;device;chipset;keyCount;get portInfo(){return this.port.getInfo()}async init(e=!1){try{const t=await E();this.port=!e&&t.length===1?t[0]:await navigator.serial.requestPort({filters:[...I.values()]}),await this.port.open({baudRate:this.baudRate});const s=this.port.getInfo();f.update(l=>(l.push({type:"system",value:`Connected; ID: 0x${s.usbProductId?.toString(16)}; Vendor: 0x${s.usbVendorId?.toString(16)}`}),l)),await this.port.close(),this.version=new $(await this.send("VERSION").then(([l])=>l));const[i,n,a]=await this.send("ID");this.company=i,this.device=n,this.chipset=a,this.keyCount=M[this.device]}catch(t){throw alert(t),console.error(t),t}}async suspend(){await this.reader.cancel(),await this.streamClosed.catch(()=>{}),this.reader.releaseLock(),await this.port.close()}async wake(){await this.port.open({baudRate:this.baudRate});const e=new TextDecoderStream;this.streamClosed=this.port.readable.pipeTo(e.writable,{signal:this.abortController1.signal}),this.reader=e.readable.pipeThrough(new TransformStream(new k),{signal:this.abortController2.signal}).getReader()}async internalRead(){const{value:e}=await this.reader.read();return f.update(t=>(t.push({type:"output",value:e}),t)),e}async internalSend(...e){const t=this.port.writable.getWriter();try{f.update(s=>(s.push({type:"input",value:e.join(" ")}),s)),await t.write(new TextEncoder().encode(`${e.join(" ")}\r
`))}finally{t.releaseLock()}}async forget(){await this.port.forget()}async runWith(e){for(;this.lock;)await this.lock;const t=this.internalSend.bind(this),s=this.internalRead.bind(this),i=new Promise(async n=>{let a;try{this.suspendDebounceId?clearTimeout(this.suspendDebounceId):await this.wake(),a=await e(t,s)}finally{delete this.lock,this.suspendDebounceId=setTimeout(()=>{console.assert(this.lock===void 0),this.lock=this.suspend().then(()=>(delete this.lock,delete this.suspendDebounceId,!0))},this.suspendDebounce),n(a)}});return this.lock=i.then(()=>!0),i}async send(...e){return this.runWith(async(t,s)=>{await t(...e);const i=e.join(" ").replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");return s().then(n=>n.replace(new RegExp(`^${i} `),"").split(" "))})}async getChordCount(){const[e]=await this.send("CML C0");return Number.parseInt(e)}async getChord(e){const[t,s]=await this.send(`CML C1 ${e}`);return{actions:A(t),phrase:C(s)}}async getChordPhrase(e){const[t]=await this.send(`CML C2 ${b(e)}`);return t==="2"?void 0:C(t)}async setChord(e){const[t]=await this.send("CML","C3",b(e.actions),T(e.phrase));t!=="0"&&console.error(`Failed with status ${t}`)}async deleteChord(e){const t=await this.send(`CML C4 ${b(e.actions)}`);if(console.log(t),t.at(-1)!=="2")throw new Error(`Failed with status ${t}`)}async setLayoutKey(e,t,s){const[i]=await this.send(`VAR B4 A${e} ${t} ${s}`);if(console.log(i),i!=="0")throw new Error(`Failed with status ${i}`)}async getLayoutKey(e,t){const[s,i]=await this.send(`VAR B3 A${e} ${t}`);if(i!=="0")throw new Error(`Failed with status ${i}`);return Number(s)}async commit(){const[e]=await this.send("VAR B0");if(e!=="0")throw new Error(`Failed with status ${e}`)}async setSetting(e,t){const[s]=await this.send(`VAR B2 ${e.toString(16).toUpperCase()} ${t}`);if(s!=="0")throw new Error(`Failed with status ${s}`)}async getSetting(e){const[t,s]=await this.send(`VAR B1 ${e.toString(16).toUpperCase()}`);if(s!=="0")throw new Error(`Setting "0x${e.toString(16)}" doesn't exist (Status code ${s})`);return Number(t)}async reboot(){await this.send("RST")}async bootloader(){await this.send("RST BOOTLOADER")}async reset(e){await this.send(`RST ${e}`)}async getRamBytesAvailable(){return Number(await this.send("RAM"))}}function u(o,e,t){{const s=localStorage.getItem(o),i=s!==null?c(JSON.parse(s)):c(e);return i.subscribe(n=>{(!t||t())&&localStorage.setItem(o,JSON.stringify(n))}),i}}const j=u("user-theme",{color:"#6D81C7",mode:"dark"}),d=u("user-preferences",{backup:!1,autoConnect:!1}),F=(o,e)=>{const t=d.subscribe(i=>{o.checked=i[e]});function s(){d.update(i=>(i[e]=o.checked,i))}return o.addEventListener("input",s),{destroy(){t(),o.removeEventListener("input",s)}}},y={settings:{1:{title:"Enable Serial Header",description:"boolean 0 or 1, default is 0"},2:{title:"Enable Serial Logging",description:"boolean 0 or 1, default is 0"},3:{title:"Enable Serial Debugging",description:"boolean 0 or 1, default is 0"},4:{title:"Enable Serial Raw",description:"boolean 0 or 1, default is 0"},5:{title:"Enable Serial Chord",description:"boolean 0 or 1, default is 0"},6:{title:"Enable Serial Keyboard",description:"boolean 0 or 1, default is 0"},7:{title:"Enable Serial Mouse",description:"boolean 0 or 1, default is 0"},17:{title:"Enable USB HID Keyboard",description:"boolean 0 or 1, default is 1"},18:{title:"Enable Character Entry",description:"boolean 0 or 1"},19:{title:"GUI-CTRL Swap Mode",description:"boolean 0 or 1; 1 swaps keymap 0 and 1. (CCL only)"},20:{title:"Key Scan Duration",description:"scan rate described in milliseconds; default is 2ms = 500Hz"},21:{title:"Key Debounce Press Duration",description:"debounce time in milliseconds; default is 7ms on the One and 20ms on the Lite"},22:{title:"Key Debounce Release Duration",description:"debounce time in milliseconds; default is 7ms on the One and 20ms on the Lite"},23:{title:"Keyboard Output Character Microsecond Delays",description:"delay time in microseconds (one delay for press and again for release); default is 480us; max is 10240us; increments of 40us"},33:{title:"Enable USB HID Mouse",description:"boolean 0 or 1; default is 1"},34:{title:"Slow Mouse Speed",description:"pixels to move at the mouse poll rate; default for CC1 is 5 = 250px/s"},35:{title:"Fast Mouse Speed",description:"pixels to move at the mouse poll rate; default for CC1 is 25 = 1250px/s"},36:{title:"Enable Active Mouse",description:"boolean 0 or 1; moves mouse back and forth every 60s"},37:{title:"Mouse Scroll Speed",description:"default is 1; polls at 1/4th the rate of the mouse move updates"},38:{title:"Mouse Poll Duration",description:"poll rate described in milliseconds; default is 20ms = 50Hz"},49:{title:"Enable Chording",description:"boolean 0 or 1"},50:{title:"Enable Chording Character Counter Timeout",description:"boolean 0 or 1; default is 1"},51:{title:"Chording Character Counter Timeout Timer",description:"0-255 deciseconds; default is 40 or 4.0 seconds"},52:{title:"Chord Detection Press Tolerance(ms)",description:"1-50 milliseconds"},53:{title:"Chord Detection Release Tolerance(ms)",description:"1-50 milliseconds"},65:{title:"Enable Spurring",description:"boolean 0 or 1; default is 1"},66:{title:"Enable Spurring Character Counter Timeout",description:"boolean 0 or 1; default is 1"},67:{title:"Spurring Character Counter Timeout Timer",description:"0-255 seconds; default is 240"},81:{title:"Enable Arpeggiates",description:"boolean 0 or 1; default is 1"},84:{title:"Arpeggiate Tolerance",description:"in milliseconds; default 800ms"},97:{title:"Enable Compound Chording (coming soon)",description:"boolean 0 or 1; default is 0"},100:{title:"Compound Tolerance",description:"in milliseconds; default 1500ms"},129:{title:"LED Brightness",description:"0-50 (CCL only); default is 5, which draws around 100 mA of current"},130:{title:"LED Color Code",description:"Color Codes to be listed (CCL only)"},131:{title:"Enable LED Key Highlight (coming soon)",description:"boolean 0 or 1 (CCL only)"},132:{title:"Enable LEDs",description:"boolean 0 or 1; default is 1 (CCL only)"},145:{title:"Operating System",description:"Operating system codes listed below"},146:{title:"Enable Realtime Feedback",description:"boolean 0 or 1; default is 1"},147:{title:"Enable CharaChorder Ready on startup",description:"boolean 0 or 1; default is 1"}}},w=c(),f=c([]),V=u("chord-library",[],()=>p(d).backup),N=u("layout",[[],[],[]],()=>p(d).backup),O=u("device-settings",[],()=>p(d).backup),S=c("done"),m=c(void 0);async function z(o=!1){const e=p(w)??new x;await e.init(o),w.set(e);const t=await e.getChordCount();S.set("downloading");const s=Object.keys(y.settings).length+e.keyCount*3+t;let i=0;m.set({max:s,current:i});function n(){i++,m.set({max:s,current:i})}const a=[];for(const r in y.settings){try{a[Number.parseInt(r)]=await e.getSetting(Number.parseInt(r))}catch{}n()}O.set(a);const l=[[],[],[]];for(let r=1;r<=3;r++)for(let h=0;h<e.keyCount;h++)l[r-1][h]=await e.getLayoutKey(r,h),n();N.set(l);const g=[];for(let r=0;r<t;r++)g.push(await e.getChord(r)),n();V.set(g),S.set("done"),m.set(void 0)}export{S as a,V as b,N as c,O as d,m as e,U as f,R as g,L as h,z as i,f as j,u as k,F as p,w as s,j as t,d as u};
//# sourceMappingURL=connection.d00f3c10.js.map
