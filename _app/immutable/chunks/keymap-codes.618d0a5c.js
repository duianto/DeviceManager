import{_ as t}from"./preload-helper.a4192956.js";const r=await Promise.all(Object.values(Object.assign({"/src/lib/assets/keymaps/ascii-macros.yml":()=>t(()=>import("./ascii-macros.b49255bb.js"),[],import.meta.url),"/src/lib/assets/keymaps/ascii.yml":()=>t(()=>import("./ascii.b5ba2478.js"),[],import.meta.url),"/src/lib/assets/keymaps/chara-chorder-one.yml":()=>t(()=>import("./chara-chorder-one.0035a955.js"),[],import.meta.url),"/src/lib/assets/keymaps/chara-chorder.yml":()=>t(()=>import("./chara-chorder.94d1b0c5.js"),[],import.meta.url),"/src/lib/assets/keymaps/cp-1252.yml":()=>t(()=>import("./cp-1252.3d455c48.js"),[],import.meta.url),"/src/lib/assets/keymaps/keyboard.yml":()=>t(()=>import("./keyboard.150da1c7.js"),[],import.meta.url),"/src/lib/assets/keymaps/mouse.yml":()=>t(()=>import("./mouse.8d538063.js"),[],import.meta.url),"/src/lib/assets/keymaps/scancode.yml":()=>t(()=>import("./scancode.a9156a11.js"),[],import.meta.url)})).map(async e=>e().then(s=>s.default))),i=Object.fromEntries(r.flatMap(e=>Object.entries(e.actions).map(([s,a])=>[Number(s),{...a,code:Number(s),category:e}]))),o=new Map(r.flatMap(e=>Object.entries(e.actions).map(([s,a])=>[a.keyCode,Number(s)])).filter(([e])=>e!==void 0)),_=new Map(r.flatMap(e=>Object.entries(e.actions).map(([s,a])=>[a.id,{...a,code:Number(s),category:e}])).filter(([e])=>e!==void 0)),p=new Map([[" ",32]]);export{_ as K,i as a,o as b,r as c,p as s};
//# sourceMappingURL=keymap-codes.618d0a5c.js.map
