{"version":3,"file":"share-url.4f533277.js","sources":["../../../../../../src/lib/share/action-array.ts","../../../../../../src/lib/serialization/base64.ts","../../../../../../src/lib/share/share-url.ts"],"sourcesContent":["import {compressActions, decompressActions} from \"../serialization/actions\"\nimport {CHARA_FILE_TYPES} from \"../share/share-url\"\n\nexport type ActionArray = number[] | ActionArray[]\nexport function serializeActionArray(array: ActionArray): Uint8Array {\n  let out = new Uint8Array(5)\n  const writer = new DataView(out.buffer)\n  writer.setUint32(0, array.length)\n\n  if (array.length === 0) {\n    return out\n  } else if (typeof array[0] === \"number\") {\n    writer.setUint8(4, CHARA_FILE_TYPES.indexOf(\"number\"))\n    const compressed = compressActions(array as number[])\n    writer.setUint32(0, compressed.length)\n    return concatUint8Arrays(out, compressed)\n  } else if (Array.isArray(array[0])) {\n    writer.setUint8(4, CHARA_FILE_TYPES.indexOf(\"array\"))\n    return concatUint8Arrays(out, ...(array as ActionArray[]).map(serializeActionArray))\n  } else {\n    throw new Error(\"Not implemented\")\n  }\n}\n\nexport function deserializeActionArray(raw: Uint8Array, cursor = {pos: 0}): ActionArray {\n  const reader = new DataView(raw.buffer)\n  const length = reader.getUint32(cursor.pos)\n  cursor.pos += 4\n  const type = CHARA_FILE_TYPES[reader.getUint8(cursor.pos)]\n  cursor.pos++\n\n  if (type === \"number\") {\n    const decompressed = decompressActions(raw.slice(cursor.pos, cursor.pos + length))\n    cursor.pos += length\n    return decompressed\n  } else if (type === \"array\") {\n    const out = []\n    for (let i = 0; i < length; i++) {\n      out.push(deserializeActionArray(raw, cursor))\n    }\n    return out\n  } else {\n    throw new Error(\"Not implemented\")\n  }\n}\n\nexport function concatUint8Arrays(...arrays: Uint8Array[]): Uint8Array {\n  const out = new Uint8Array(arrays.reduce((a, b) => a + b.length, 0))\n  let offset = 0\n  for (const array of arrays) {\n    out.set(array, offset)\n    offset += array.length\n  }\n  return out\n}\n","/**\n * Encodes a gzipped binary blob to a base64 string.\n *\n * Note that the string is url-compatible base64,\n * meaning some chars are swapped for compatibility\n */\nexport async function toBase64(blob: Blob): Promise<string> {\n  return new Promise(async resolve => {\n    const reader = new FileReader()\n    reader.onloadend = function () {\n      resolve(\n        `${(reader.result as string)\n          .replace(/^data:application\\/octet-stream;base64,/, \"\")\n          .replaceAll(\"+\", \".\")\n          .replaceAll(\"/\", \"_\")\n          .replaceAll(\"=\", \"-\")}`,\n      )\n    }\n    reader.readAsDataURL(blob)\n  })\n}\n\nexport async function fromBase64(base64: string, fetch = window.fetch): Promise<Blob> {\n  return fetch(\n    `data:application/octet-stream;base64,${base64\n      .replaceAll(\".\", \"+\")\n      .replaceAll(\"_\", \"/\")\n      .replaceAll(\"-\", \"=\")}`,\n  ).then(it => it.blob())\n}\n","import type {CharaFile, CharaFiles} from \"../share/chara-file\"\nimport type {ActionArray} from \"../share/action-array\"\nimport {deserializeActionArray, serializeActionArray} from \"../share/action-array\"\nimport {fromBase64, toBase64} from \"../serialization/base64\"\n\ntype CharaLayoutOrder = {\n  [K in CharaFiles[\"type\"]]: Array<\n    [Exclude<keyof Extract<CharaFiles, {type: K}>, keyof CharaFile<any>>, (typeof CHARA_FILE_TYPES)[number]]\n  >\n}\n\nconst keys: CharaLayoutOrder = {\n  layout: [\n    [\"layout\", \"array\"],\n    [\"device\", \"string\"],\n  ],\n  chords: [[\"chords\", \"array\"]],\n  settings: [[\"settings\", \"array\"]],\n}\n\nexport const CHARA_FILE_TYPES = [\"unknown\", \"number\", \"string\", \"array\"] as const\n\nconst sep = \"\\n\"\n\nexport async function charaFileToUriComponent<T extends CharaFiles>(file: T): Promise<string> {\n  let url = `${file.type}${sep}${file.charaVersion}`\n\n  for (const [key, type] of keys[file.type]) {\n    const value = file[key as keyof T]\n    url += sep\n    if (type === \"string\") {\n      url += value as string\n    } else if (type === \"array\") {\n      const stream = new Blob([serializeActionArray(value as ActionArray)])\n        .stream()\n        .pipeThrough(new CompressionStream(\"deflate\"))\n      url += await toBase64(await new Response(stream).blob())\n    } else {\n      throw new Error(\"Not implemented\")\n    }\n  }\n\n  return url\n}\n\nexport async function charaFileFromUriComponent<T extends CharaFiles>(\n  uriComponent: string,\n  fetch = window.fetch,\n): Promise<T> {\n  const [fileType, version, ...values] = uriComponent.split(sep)\n  const file: any = {type: fileType, charaVersion: Number(version)}\n\n  for (const [key, type] of keys[fileType as keyof typeof keys]) {\n    const value = values.shift()!\n    if (type === \"string\") {\n      file[key] = value\n    } else if (type === \"array\") {\n      const stream = (await fromBase64(value, fetch)).stream().pipeThrough(new DecompressionStream(\"deflate\"))\n      const actions = new Uint8Array(await new Response(stream).arrayBuffer())\n      console.log(actions)\n      file[key] = deserializeActionArray(actions)\n    }\n  }\n\n  return file\n}\n"],"names":["serializeActionArray","array","out","writer","CHARA_FILE_TYPES","compressed","compressActions","concatUint8Arrays","deserializeActionArray","raw","cursor","reader","length","type","decompressed","decompressActions","i","arrays","a","b","offset","toBase64","blob","resolve","fromBase64","base64","fetch","it","keys","sep","charaFileToUriComponent","file","url","key","value","stream","charaFileFromUriComponent","uriComponent","fileType","version","values","actions"],"mappings":"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"}